##############################################################################
# Student Names:    Samer Moussa, Mitchell Jordan
# Student Numbers:  100943496, 100957215
# Program:          Computer Programming and Analysis
# Due Date:         May 24, 2024
# Description:      Password Generator Program
##############################################################################

"""

• Attach the zipped project to the assignment folder.
• Each of the lab partners should submit a video recording (sharing screen)
explaining the code line by line along with its execution. The lab partner should
also mention the distribution of tasks for this lab. Both these requirements
would be considered for the teamwork component of the rubric."""

import random
import string


# Declare variables


def password_length():
    isvalid = True
    while isvalid:
        try:
            password = int(input("Enter the lenght of the password: "))
            if password <= 8:
                print("Please enter a value of greater than or equal to 8 to create a secure password")
            else:
                return password
        except ValueError:
            print("Please enter a valid whole number")


def letters_in_password(length):
    isvalid = True
    while isvalid:
        try:
            numb_letters = int(input("Enter the number of letters desired in the password: "))
            if not 0 < numb_letters <= length:
                print(f"The number of letters should be in the range of 0 and {length}")
            else:
                remaining = length - numb_letters
                return numb_letters, remaining
        except ValueError:
            print(f"Please enter a valid whole number in the range of 0 and {length}")


def digits_in_password(remaining):
    isvalid = True
    while isvalid:
        try:
            numb_digits = int(input("Enter the number of digits desired in the password: "))
            if not 0 < numb_digits <= remaining_digits:
                print(f"The number of digits should be in the range of 0 and {remaining_digits}")
            else:
                remaining1 = remaining - numb_digits
                return numb_digits, remaining1
        except ValueError:
            print(f"Please enter a valid whole number in the range of 0 and {remaining_digits}")


def special_characters(remaining):
    isvalid = True
    while isvalid:
        try:
            numb_special = int(input("Enter the number of special characters desired in the password: "))
            if not numb_special == remaining:
                print(f"The number of special characters must be {remaining}")
            else:
                return numb_special
        except ValueError:
            print(f"Please enter a valid whole number in the range of 0 and {remaining}")


def randomizer(length, letters, ndigits = 0, special_characters = 0):
    list_password = []
    for i in range(0,letters):
        rand_letter = random.choice(string.ascii_letters)
        list_password.append(rand_letter)
    for i in range(0, ndigits):
        rand_digit = random.choice(string.digits)
        list_password.append(rand_digit)
    for i in range(0, special_characters):
        rand_special = random.choice(string.punctuation)
        list_password.append(rand_special)
    if len(list_password) == length:
        list_password = sorted(list_password, key=lambda x: random.random())
        for x in range(len(list_password)):
            print(list_password[x], end="")


length_of_password = password_length()
numb_of_letters,  remaining_digits = letters_in_password(length_of_password)
if not remaining_digits == 0:
    numb_of_digits, remaining_digits = digits_in_password(remaining_digits)
    if not remaining_digits == 0:
        numb_of_special_characters = special_characters(remaining_digits)
        randomizer(length_of_password, numb_of_letters, numb_of_digits, numb_of_special_characters)
    else:
        randomizer(length_of_password, numb_of_letters, numb_of_digits)
else:
    randomizer(length_of_password, numb_of_letters)